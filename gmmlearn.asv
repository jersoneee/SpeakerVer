function gmm =  gmmlearn(mixtur)



disp('Learning ...');

fs = 16000;
cd('experiment');

all_files = dir;
all_dir = all_files([all_files(:).isdir]);
num_dir = numel(all_dir)-2;

for i=1:num_dir
    cd(strcat('k',num2str(i)));
    cd('dev');
    files = dir('**\*.mat');
    for k=1:numel(files)
        load(files(k).name);
        sample = sample';
        %opts = statset('Display','final');
        %[idx,Ccontrol] = kmeans(sample,words,'Replicates',5,'Options',opts,'MaxIter',1000);
        for l = 0:log2(words)
            if l==0
                [idx,C] = kmeans(sample,2^l,'Replicates',1,'MaxIter',1000);   
            else
                [idx,C] = kmeans(sample,2^l,'Replicates',1,'MaxIter',1000,'Start',[C2]);
            end
            C2 = [C+epsilon; C-epsilon];
        end
        centroids{k,i} = C;
    end
    cd ..;
    cd ..;
end
cd ..;

disp('Learning Complete.'); 


disp(fname);

fid = fopen(filename);
c = textscan(fid,'%s');
fclose(fid);

n = size(c{1});

input = [];

disp('Reading Files');
for i = 1:50%n
    c{1}{i}(end-2:end) = 'mat';
    load(['../Feats/', c{1}{i}]);
    
    if (key == 1)
        input = [mfccs, input];
    elseif (key == 2)
        input = [lpccs, input];
    elseif (key == 3)
        input = [plps, input];
    elseif (key == 4)
        input = [sdcs, input];
    end
end

input = input';  

opts = statset('MaxIter', 1000);

disp('GMM 1');
gmm1 = gmdistribution.fit(input,1, 'Options', opts, 'Regularize', 1);

disp('GMM 2');
gmm2 = gmdistribution.fit(input,2, 'Options', opts, 'Regularize', 1);

disp('GMM 4');
gmm4 = gmdistribution.fit(input,4, 'Options', opts, 'Regularize', 1);

disp('GMM 8');
gmm8 = gmdistribution.fit(input,8, 'Options', opts, 'Regularize', 1);

disp('GMM 16');
gmm16 = gmdistribution.fit(input,16, 'Options', opts, 'Regularize', 1);

disp('GMM 32');
gmm32 = gmdistribution.fit(input,32, 'Options', opts, 'Regularize', 1);

disp('GMM 64');
gmm64 = gmdistribution.fit(input,64, 'Options', opts, 'Regularize', 1);
 
disp('GMM 128');
gmm128 = gmdistribution.fit(input,128, 'Options', opts, 'Regularize', 1);

disp('GMM 256');
gmm256 = gmdistribution.fit(input,256, 'Options', opts, 'Regularize', 1);

save(fname, 'gmm1', 'gmm2', 'gmm4', 'gmm8', 'gmm16', 'gmm32', 'gmm64', ...
    'gmm128',  'gmm256'); 
